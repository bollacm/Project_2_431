Shortcomings of Dart
Sources:
  https://www.tiobe.com/tiobe-index/
  https://dart.dev/resources/faq#:~:text=Yes%2C%20Dart%20uses%20static%20typing,a%20value%20of%20another%20type.
  https://dart.dev/language/concurrency#:~:text=Instead%20of%20threads%2C%20all%20Dart,thread%20running%20an%20event%20loop.
  https://blog.flutter.wtf/when-to-use-dart-isolates/#:~:text=Earlier%20it%20was%20mentioned%20that,isolate%20to%20the%20main%20thread.
  https://medium.com/dartlang/announcing-dart-3-6-778dd7a80983 


  Concurrency:
    Instead of threads, all Dart code runs inside isolates. Using isolates.
    "isolates in Flutter do not share memory. Communication between them is organized by passing messages. 
    This leads to the following issue: limit on the size of transmitted data."(blog.flutter)
    

  Type Declairation:
    Darts Static type declaration can increase development time and verbosity.
    JavaScript uses dynamic declaration, so developers, may face a learning curve when trasitioning to Dart.


  Browser support:
    Although Dart can be compiled into JavaScript it is not nativly supported by web browsers,
    this means a JavaScript application may preform better.
    

  Eccosystem: 
    TIOBE ranks Dart as the 31st most popular language, 
    so while it is popular it lacks as much direct support as many other languages.
    Especially when you consider much of it's support exists for Google's Flutter.
    


Future of Dart

  The future for Dart seems that it has a lot of potential, considering its current standing of usage within the scope of application building. Dart is still receiving support and updates semi-monthly, with Dart 3.6 just being announced December 11th, the day this segment was written. Dart 3.6 promises some new features:

    Pub Workspaces:

    "Pub now supports shared resolution between packages in a monorepo, or workspace. A workspace is a tightly related group of packages developed, resolved, and released together.

    The pub workspaces feature ensures that packages in a monorepo share a consistent set of dependencies. This forces you to resolve dependency conflicts between your grouped packages as they arise, rather than facing confusion when you start using the packages.."



    Pub download counts:

    " The download count replaces the previous “popularity score” on individual package pages. Along with the new metric, you will also find a sparkline chart on each page, showing weekly downloads over time."


    Digit Separators: 

    " The download count replaces the previous “popularity score” on individual package pages. Along with the new metric, you will also find a sparkline chart on each page, showing weekly downloads over time."


